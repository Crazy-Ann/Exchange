package com.hynet.heebit.components.widget.chart;import com.hynet.heebit.components.widget.chart.constant.SliceLabelStyle;/** * @ClassName PieData * @Description 数据类, 饼图,rose图,环形图等都用这个传数据 * @author XiongChuanLiang<br />(xcl_168@aliyun.com) * */public class PieData {    private String pieKey;    private String pieLabel;    private double pieValue = 0.0f;    private int pieColor = 0;    //是否突出饼图    private boolean selected = false;    //标签文字旋转角度    private float labelRotateAngle = 0.0f;    //标签注释显示位置 [隐藏,Default,Inside,Ouside,Line]    private SliceLabelStyle sliceLabelStyle = SliceLabelStyle.INSIDE;    private boolean labelStyle = false;    private int labelColor = 0;    public PieData() {    }    /**     *     * @param label        标签     * @param percent    比例(0-100)     * @param color        显示颜色     */    public PieData(String label, double percent, int color) {        setLabel(label);        setPercentage(percent);        setSliceColor(color);    }    /**     *     * @param label        标签     * @param percent    比例(0-100)     * @param color        显示颜色     * @param selected    是否突出显示     */    public PieData(String label, double percent, int color, boolean selected) {        setLabel(label);        setPercentage(percent);        setSliceColor(color);        setSelected(selected);    }    /**     *     * @param key        键值     * @param label        标签     * @param percent    比例(0-100)     * @param color        显示颜色     */    public PieData(String key, String label, double percent, int color) {        setLabel(label);        setPercentage(percent);        setSliceColor(color);        setKey(key);    }    /**     *     * @param key        键值     * @param label        标签     * @param percent    比例(0-100)     * @param color        显示颜色     * @param selected    是否突出显示     */    public PieData(String key, String label, double percent, int color, boolean selected) {        setLabel(label);        setPercentage(percent);        setSliceColor(color);        setKey(key);        setSelected(selected);    }    /**     * 设置Key值     * @param key Key值     */    public void setKey(String key) {        pieKey = key;    }    /**     * 返回Key值     * @return Key值     */    public String getKey() {        return pieKey;    }    /**     * 设置标签     * @param label 标签     */    public void setLabel(String label) {        pieLabel = label;    }    /**     * 设置比例 (0-1),绘制时，会将其转换为对应的圆心角     * @param value 比例      */    public void setPercentage(double value) {        pieValue = value;    }    /**     * 设置扇区颜色     * @param color 颜色     */    public void setSliceColor(int color) {        pieColor = color;    }    /**     * 设置当前块是否突出，true为突出     * @param selected 是否突出     */    public void setSelected(boolean selected) {        this.selected = selected;    }    /**     * 返回标签     * @return 标签     */    public String getLabel() {        return pieLabel;    }    /**     * 返回当前比例(0-100)     * @return 比例     */    public double getPercentage() {        return pieValue;    }    /**     * 是否突出显示     * @return 是否突出     */    public boolean getSelected() {        return selected;    }    /**     * 返回扇区颜色     * @return 颜色     */    public int getSliceColor() {        return pieColor;    }    /**     * 返回标签在显示时的旋转角度     * @return 旋转角度     */    public float getItemLabelRotateAngle() {        return labelRotateAngle;    }    /**     * 设置标签在显示时的旋转角度     * @param rotateAngle 旋转角度     */    public void setItemLabelRotateAngle(float rotateAngle) {        this.labelRotateAngle = rotateAngle;    }    /**     * 可用于定制记录的标签显示类型     * @param style    标签风格     * @param color 标签颜色     */    public void setCustLabelStyle(SliceLabelStyle style, int color) {        sliceLabelStyle = style;        labelStyle = true;        labelColor = color;    }    /**     * 返回标签显示类型     * @return 类型     */    public SliceLabelStyle getLabelStyle() {        return sliceLabelStyle;    }    /**     * 返回是否有定制过标签类型     * @return 状态     */    public boolean getCustLabelStyleStatus() {        return labelStyle;    }    /**     * 返回标签定制颜色     * @return 颜色     */    public int getCustLabelColor() {        return labelColor;    }}