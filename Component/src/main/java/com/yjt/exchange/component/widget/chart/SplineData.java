package com.hynet.heebit.components.widget.chart;import com.hynet.heebit.components.widget.chart.constant.DotStyle;import java.util.List;public class SplineData extends LnData {    //线上每个点的值    private List<PointD> pointDS;    //标签文字旋转角度    private float labelRotateAngle = 0.0f;    public SplineData() {}    /**     * 构成一条完整的线条     *     * @param lineKey    对应的键值     * @param dataSeries 对应的数据序列     * @param color      线条颜色     */    public SplineData(String lineKey, List<PointD> dataSeries, int color) {        setLineKey(lineKey);        setLineDataSet(dataSeries);        setLineColor(color);    }    /**     * @param lineKey    key值     * @param dataSeries 对的数据序列     * @param color      线的颜色     * @param dotStyle   坐标点绘制类型     */    public SplineData(String lineKey, List<PointD> dataSeries, int color, DotStyle dotStyle) {        setLineKey(lineKey);        setLineDataSet(dataSeries);        setLineColor(color);        setDotStyle(dotStyle);    }    /**     * 设置绘制线的数据序列,由x与y坐标构建     *     * @param dataSeries <X坐标值，Y坐标值>     */    public void setLineDataSet(List<PointD> dataSeries) {        pointDS = dataSeries;    }    /**     * 返回绘制线的数据序列     *     * @return 线的数据序列<X坐标值               ，               Y坐标值>     */    public List<PointD> getLineDataSet() {        return pointDS;    }    /**     * 返回标签在显示时的旋转角度     *     * @return 旋转角度     */    public float getItemLabelRotateAngle() {        return labelRotateAngle;    }    /**     * 设置标签在显示时的旋转角度     *     * @param rotateAngle 旋转角度     */    public void setItemLabelRotateAngle(float rotateAngle) {        this.labelRotateAngle = rotateAngle;    }}