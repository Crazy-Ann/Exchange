/** * Copyright 2014  XCL-Charts * <p> * Licensed under the Apache License, Version 2.0 (the "License"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at * <p> * http://www.apache.org/licenses/LICENSE-2.0 * <p> * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. * * @Project XCL-Charts * @Description Android图表基类库 * @author XiongChuanLiang<br   />(xcl_168@aliyun.com) * @license http://www.apache.org/licenses/  Apache v2 License * @version 1.0 */package com.hynet.heebit.components.widget.chart.renderer.line;import android.graphics.Color;import com.hynet.heebit.components.widget.chart.constant.DotStyle;public class PlotDot {    private int color = Color.BLACK;    private int ringInnerColor = Color.WHITE;    private int ring2InnerColor = Color.RED;    //线上的点为圆或角    protected DotStyle mDotStyle = DotStyle.DOT;    private float radius = 10.0f;    private int alpha = 255;    public PlotDot() {    }    /**     * 设置颜色     * @param color    颜色     */    public void setColor(int color) {        this.color = color;    }    /**     * 返回颜色     * @return 颜色     */    public int getColor() {        return color;    }    /**     * 设置点形状为环形时，内部所填充的颜色.仅对环形有效     * @param color 内部填充颜色     */    public void setRingInnerColor(int color) {        ringInnerColor = color;    }    /**     * 设置点形状为环形时，最内部所填充的颜色.仅对环形有效     * @param color 最内部填充颜色     */    public void setRing2InnerColor(int color) {        ring2InnerColor = color;    }    /**     * 设置当前环形点内部填充颜色     * @return 内部填充颜色     */    public int getRingInnerColor() {        return ringInnerColor;    }    /**     * 设置当前环形点最内部填充颜色     * @return 内部填充颜色     */    public int getRing2InnerColor() {        return ring2InnerColor;    }    /**     * 设置点的显示风格     * @param style 显示风格     */    public void setDotStyle(DotStyle style) {        mDotStyle = style;    }    /**     * 返回点的显示风格     * @return 显示风格     */    public DotStyle getDotStyle() {        return mDotStyle;    }    /**     * 设置点的绘制半径大小，会依此指定的半径来绘制相关图形     * @param radius 半径     */    public void setDotRadius(float radius) {        this.radius = radius;    }    /**     * 返回点的绘制半径大小     * @return 半径     */    public float getDotRadius() {        return radius;    }    /**     * 设置透明度     * @param alpha 透明度     */    public void setAlpah(int alpha) {        this.alpha = alpha;    }    /**     * 返回当前透明度     * @return 透明度     */    public int getAlpha() {        return alpha;    }}