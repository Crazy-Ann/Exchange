package com.hynet.heebit.components.widget.chart.renderer.plot;import android.graphics.Canvas;import android.graphics.Color;import android.graphics.Paint;import com.hynet.heebit.components.widget.chart.constant.LabelBoxStyle;import com.hynet.heebit.components.widget.chart.constant.RectType;public class PlotLabel {    //标签与框的保留间距    protected float margin = 5f;    //box    protected BorderRender borderRender = null;    protected boolean showBoxBorder = true;    protected boolean showBackground = true;    //标签起始偏移多少距离    protected float offsetX = 0.0f;    protected float offsetY = 0.0f;    protected final int DEF_BOX_BG_ALPHA = 100;    //带箭头的框中，箭头的高度    protected float scale = 0.2f;    //圆框半径    protected float radius = 0.f;    protected LabelBoxStyle labelBoxStyle = LabelBoxStyle.CAPRECT;    public PlotLabel() {    }    /**     * 开放标签框绘制基类     *     * @return 框绘制类     */    public Border getBox() {        initializeBox();        return borderRender;    }    protected void initializeBox() {        if (null == borderRender) {            borderRender = new BorderRender();            borderRender.setBorderRectType(RectType.RECT);            borderRender.getBackgroundPaint().setColor(Color.rgb(240, 255, 112));            borderRender.getBackgroundPaint().setAlpha(DEF_BOX_BG_ALPHA);        }    }    /**     * 不显示标签边框     */    public void hideBorder() {        showBoxBorder = false;    }    /**     * 不显示标签背景     */    public void hideBackground() {        showBackground = false;    }    /**     * 显示标签边框     */    public void showBorder() {        showBoxBorder = true;    }    /**     * 显示图背景     */    public void showBackground() {        showBackground = true;    }    /**     * 带箭头的标识框中，其箭头的高度(占整宽度的比例)     *     * @param scale 比例     */    public void setCapBoxAngleHeight(float scale) {        this.scale = scale;    }    /**     * 圆形标识框中，其半径长度     *     * @param radius 半径     */    public void setCircleBoxRadius(float radius) {        this.radius = radius;    }    /**     * 显示标签标识风格。默认为带箭头的标识框     *     * @param style 风格     */    public void setLabelBoxStyle(LabelBoxStyle style) {        labelBoxStyle = style;        if (LabelBoxStyle.TEXT == labelBoxStyle) {            this.hideBorder();            this.hideBackground();            return;        }        if (LabelBoxStyle.CIRCLE == labelBoxStyle) {            this.hideBorder();            showBackground();        } else {            showBorder();            showBackground();        }    }    /**     * 标签向X方向偏移多少距离     *     * @param offset 偏移值     */    public void setOffsetX(float offset) {        offsetX = offset;    }    /**     * 标签向Y方向偏移多少距离     *     * @param offset 偏移值     */    public void setOffsetY(float offset) {        offsetY = offset;    }    /**     * 标签与框的保留间距     *     * @param margin 间距     */    public void setMargin(float margin) {        this.margin = margin;    }    /**     * 返回标签与边框的间距     *     * @return 间距     */    public float getMargin() {        return margin;    }    public boolean drawLabel(Canvas canvas, Paint paint, String label, float cX, float cY, float itemAngle) {        return true;    }    public boolean drawLabel(Canvas canvas, Paint paint, String label, float cX, float cY, float itemAngle, int borderColor) {        return true;    }}