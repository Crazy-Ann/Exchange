package com.hynet.heebit.components.widget.chart.renderer.plot;import android.graphics.Color;import android.graphics.Paint;import android.graphics.Paint.Style;import com.hynet.heebit.components.widget.chart.constant.LineStyle;import com.hynet.heebit.components.widget.chart.constant.RectType;public class Border {    //线的基类画笔    private Paint borderLinePaint = null;    private LineStyle lineStyle = LineStyle.SOLID;    private RectType roundrect = RectType.ROUNDRECT;    private int raidus = 15;    protected static final int borderSpadding = 5;    //背景画笔    protected Paint backgroundPaint = null;    public Border() {    }    /**     * 开放线的画笔     * @return 画笔     */    public Paint getLinePaint() {        if (null == borderLinePaint) {            borderLinePaint = new Paint();            borderLinePaint.setAntiAlias(true);            borderLinePaint.setColor(Color.BLACK); //(int)Color.rgb(26, 59, 105));            borderLinePaint.setStyle(Style.STROKE);            borderLinePaint.setStrokeWidth(2);        }        return borderLinePaint;    }    /**     * 设置线的颜色	     * @param color 线的颜色     */    public void setBorderLineColor(int color) {        getLinePaint().setColor(color);    }    /**     * 设置边框线类型     * @param style 线类型     */    public void setBorderLineStyle(LineStyle style) {        lineStyle = style;    }    /**     * 设置边框类型     * @param type 框类型     */    public void setBorderRectType(RectType type) {        roundrect = type;    }    /**     * 返回边框线类型     * @return 边框线类型     */    public LineStyle getBorderLineStyle() {        return lineStyle;    }    /**     * 返回边框类型     * @return 边框类型     */    public RectType getBorderRectType() {        return roundrect;    }    /**     * 设置角圆弧半径     * @param radius 半径     */    public void setRoundRadius(int radius) {        raidus = radius;    }    /**     * 返回角圆弧半径     * @return 半径     */    public int getRoundRadius() {        return raidus;    }    /**     * 返回边框所占宽度     * @return 边框所占宽度     */    public int getBorderWidth() {        int width = borderSpadding;        if (getBorderRectType() == RectType.ROUNDRECT) {            width += getRoundRadius();        }        return width;    }    /**     * 开放背景画笔     * @return 画笔     */    public Paint getBackgroundPaint() {        if (null == backgroundPaint) {            backgroundPaint = new Paint();            backgroundPaint.setAntiAlias(true);            backgroundPaint.setStyle(Style.FILL);            backgroundPaint.setColor(Color.WHITE);            backgroundPaint.setAlpha(220);        }        return backgroundPaint;    }}