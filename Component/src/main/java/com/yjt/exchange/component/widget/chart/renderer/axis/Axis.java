package com.hynet.heebit.components.widget.chart.renderer.axis;import android.graphics.Color;import android.graphics.Paint;import android.graphics.Paint.Align;public class Axis {    //轴线画笔    private Paint axisPaint = null;    //是否显示轴线    private boolean axisLineVisible = true;    //数据轴刻度线与边上的标注画笔    private Paint tickMarksPaint = null;    private Paint tickLabelsPaint = null;    //数据轴刻度线与边上的标注是否显示    private boolean tickMarksVisible = true;    private boolean axisLabelsVisible = true;    //刻度标记文字旋转角度    private float tickLabelRotateAngle = 0.0f; //-45f;    //是否显示轴(包含轴线，刻度线和标签)    private boolean axisVisible = true;    public Axis() {    }    private void initAxisPaint() {        if (null == axisPaint) {            axisPaint = new Paint();            axisPaint.setColor(Color.BLACK);            //axisPaint.setStrokeWidth(mAxisLineWidth); //设置轴线条粗细            axisPaint.setAntiAlias(true);            axisPaint.setStrokeWidth(5);        }    }    private void initTickMarksPaint() {        if (null == tickMarksPaint) {            tickMarksPaint = new Paint();            tickMarksPaint.setColor(Color.BLACK);            tickMarksPaint.setStrokeWidth(3);            tickMarksPaint.setAntiAlias(true);        }    }    private void initTickLabelPaint() {        if (null == tickLabelsPaint) {            tickLabelsPaint = new Paint();            tickLabelsPaint.setColor(Color.BLACK);            tickLabelsPaint.setTextAlign(Align.RIGHT);            tickLabelsPaint.setTextSize(18);            tickLabelsPaint.setAntiAlias(true);        }    }    /**     * 显示轴(包含轴线，刻度线和标签)     */    public void show() {        axisVisible = true;    }    /**     * 隐藏轴(包含轴线，刻度线和标签)     */    public void hide() {        axisVisible = false;    }    /**     * 是否显示轴线     * @return 是否显示     */    public boolean isShow() {        return axisVisible;    }    /**     * 显示轴线     */    public void showAxisLine() {        axisLineVisible = true;    }    /**     * 隐藏轴线     */    public void hideAxisLine() {        axisLineVisible = false;    }    /**     * 返回是否显示轴线     * @return 是否显示     */    public boolean isShowAxisLine() {        return axisLineVisible;    }    /**     * 开放轴线画笔     * @return 画笔     */    public Paint getAxisPaint() {        initAxisPaint();        return axisPaint;    }    /**     * 开放轴刻度线画笔     * @return 画笔     */    public Paint getTickMarksPaint() {        initTickMarksPaint();        return tickMarksPaint;    }    /**     * 开放轴标签画笔     * @return 画笔     */    public Paint getTickLabelPaint() {        initTickLabelPaint();        return tickLabelsPaint;    }    /**     * 显示轴刻度线     */    public void showTickMarks() {        this.tickMarksVisible = true;    }    /**     * 隐藏轴刻度线     */    public void hideTickMarks() {        this.tickMarksVisible = false;    }    /**     * 返回是否显示轴刻度线     * @return 是否显示     */    public boolean isShowTickMarks() {        return tickMarksVisible;    }    /**     * 显示轴标签     */    public void showAxisLabels() {        axisLabelsVisible = true;    }    /**     * 隐藏轴标签     */    public void hideAxisLabels() {        axisLabelsVisible = false;    }    /**     * 返回是否显示轴标签     * @return 是否显示     */    public boolean isShowAxisLabels() {        return this.axisLabelsVisible;    }    /**     * 返回轴标签文字旋转角度     * @return 旋转角度     */    public float getTickLabelRotateAngle() {        return tickLabelRotateAngle;    }    /**     * 设置轴标签文字旋转角度     * @param rotateAngle 旋转角度     */    public void setTickLabelRotateAngle(float rotateAngle) {        this.tickLabelRotateAngle = rotateAngle;    }}