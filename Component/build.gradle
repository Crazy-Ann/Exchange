apply plugin: 'com.android.library'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
            manifest.srcFile 'src/main/AndroidManifest.xml'
            java.srcDirs = ['src/main/java']
            resources.srcDirs = ['src/main/resources']
            aidl.srcDirs = ['src/main/aidl']
            renderscript.srcDirs = ['src/maom']
            res.srcDirs = ['src/main/res']
            assets.srcDirs = ['src/main/assets']
        }
//        instrumentTest.setRoot('androidTest')
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }
    lintOptions {
//        textReport true
//        textOutput 'stdout'
//        abortOnError true
        abortOnError false
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    testApi deps.junit
    androidTestApi deps.runner
    androidTestApi deps.espresso_core
    api deps.constraint_layout
    api deps.annotation
    api deps.appcompat
    api deps.design
    api deps.glide
    api deps.guava
    api deps.okhttp3
    api deps.okio
    api deps.fastjson
    api deps.zxing
    api deps.JsBridge
    api deps.NumericKeyboard
    api deps.Password
    api deps.zip4j
}
